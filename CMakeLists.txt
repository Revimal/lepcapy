CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2 FATAL_ERROR)
project(lepcapy)

SET(LEPCAPY_VERSION_MAJOR 0)
SET(LEPCAPY_VERSION_MINOR 4)

IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
    SET(CMAKE_VERBOSE_MAKEFILE ON)

    IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
    ENDIF(NOT CMAKE_BUILD_TYPE)

    ADD_DEFINITIONS(-DCALIB_CFG_BUILD_MODE="${CMAKE_BUILD_TYPE}")
    ADD_DEFINITIONS(-DCALIB_CFG_OS="${CMAKE_SYSTEM_NAME}" -DCALIB_CFG_CPU="${CMAKE_SYSTEM_PROCESSOR}")

    EXEC_PROGRAM(cat ARGS "/proc/cpuinfo" OUTPUT_VARIABLE CPUINFO)
    STRING(REGEX REPLACE "^.*(avx).*$" "\\1" ARCH_OPTS ${CPUINFO})
    STRING(COMPARE EQUAL "avx" "${ARCH_OPTS}" AVX_TRUE)
    IF(AVX_TRUE)
        SET(AVX_OPTIMIZATION "-mavx")
    ENDIF (AVX_TRUE)
    STRING(REGEX REPLACE "^.*(avx2).*$" "\\1" ARCH_OPTS ${CPUINFO})
    STRING(COMPARE EQUAL "avx2" "${ARCH_OPTS}" AVX2_TRUE)
    IF(AVX2_TRUE)
        SET(AVX_OPTIMIZATION "-march=core-avx2 -mavx2 -mavx")
    ENDIF (AVX2_TRUE)

    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall ${AVX_OPTIMIZATION}")

    FIND_PACKAGE(Threads REQUIRED)
    ADD_SUBDIRECTORY(lepcapy)

ELSE(CMAKE_SYSTEM_NAME MATCHES "Linux")
    MESSAGE("Only available on linux" FATAL_ERROR)

ENDIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
